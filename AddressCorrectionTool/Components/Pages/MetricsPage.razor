@using Microsoft.JSInterop
@using AddressCorrectionTool.Controllers
@using Microsoft.AspNetCore.Mvc
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using AddressCorrectionTool.Models
@using System.Text
@using Microsoft.AspNetCore.Authorization
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components


@page "/metrics/"

@inject HttpClient Http
@inject IJSRuntime JSRuntime

@rendermode InteractiveServer

<h3>Address Correction Metrics</h3>

<p>Here you can view the metrics related to address correction.</p>

<div class="row">
    <div class="col-sm-4">
        <div><canvas id="metrics-chart"></canvas></div>
    </div>
    <div class="col-md-6">
        <div><canvas id="acquisitions2"></canvas></div>
    </div>
</div>

<script src="/javascript/charts.js"></script>

<script>
    window.convertArray = (win251Array) => {
        var win251Array = new TextDecoder('windows-1251');
        var bytes = new Uint8Array(win251Array);
        var decodedArray = win251Array.decode(bytes);
        return decodedArray;
    }
</script>

@code
{

    private string baseUrl = "https://localhost:7207";
    private const string Identifier = "createMetricsChart";
    private Metrics metrics = new Models.Metrics();
    private int[] metricsArray = new int[3];

    protected override async Task OnInitializedAsync()
    {

        metrics = await Http.GetFromJsonAsync<Metrics>(baseUrl + "/Metrics");

        if (metrics != null)
        {
            // add the values to the array
            metricsArray[0] = metrics.TotalAddresses;
            metricsArray[1] = metrics.CorrectedAddresses;
            metricsArray[2] = metrics.FailedAddresses;
        }

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender && metricsArray != null)
        {
            CreateMetricsChart();
        }
    }

    async Task CreateMetricsChart()
    {
        await JSRuntime.InvokeVoidAsync(Identifier, metricsArray);
    }

}
